# Docker Compose configuration for Flask app with Caddy reverse proxy
#
# Services:
#   web:
#     - Builds the Flask application from the current directory.
#     - Container is named 'flask_app'.
#     - Exposes port 5000 for development.
#     - Loads environment variables from a .env file.
#     - Sets PYTHONPATH for the app.
#     - Mounts the project directory for hot reload and persistence.
#     - Mounts the 'instance' directory to persist the SQLite database.
#     - Always restarts on failure.
#
#   caddy:
#     - Uses the official Caddy v2 image as a reverse proxy.
#     - Container is named 'caddy'.
#     - Exposes HTTP (80) and HTTPS (443) ports.
#     - Mounts the Caddyfile for configuration.
#     - Uses named volumes for Caddy data and config persistence.
#     - Depends on the 'web' service to ensure it starts after Flask.
#
# Volumes:
#   caddy_data:   # Persists Caddy runtime data (e.g., certificates)
#   caddy_config: # Persists Caddy configuration

services:
  web:
    build: .
    container_name: flask_app
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      - .:/app  # Hot reload and persistence in dev
      - ./instance:/app/instance # persist SQLite DB in dev
    restart: always
  
  caddy:
    image: caddy:2
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web
  

volumes:
  caddy_data:
  caddy_config: